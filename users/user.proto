syntax = "proto3";
package users;

service UserService {
    rpc HealthCheck(Empty) returns (HealthCheckResponse);
    rpc CreateUser(UserRequest) returns (UserResponse);
    //Customers
    rpc CreateUpdateCustomer(CreateUpdateCustomerRequest) returns (CustomerResponse);
    rpc CustomerLogin(LoginRequest) returns (CustomerResponse);
    rpc GetCustomer(GetRequest) returns (CustomerResponse);
    rpc GetCustomers(Empty) returns (UserResponse);
    rpc CheckCustomerExists(CheckCustomerRequest) returns (UserResponse);
    rpc VerifyCustomer(VerifyCustomerRequest) returns (UserResponse);
    rpc SendTokenVerification(SendTokenRequest) returns (UserResponse);
    rpc CustomerOAuthProvider(CustomerOAuthProviderRequest) returns (CustomerResponse);
    //Riders
    rpc CreateUpdateRider(CreateOrUpdateRider) returns (UserResponse);
    rpc GetRider(GetRequest) returns (UserResponse);
    rpc GetRiders(Empty) returns (UserResponse);
    //Businesses
    rpc CreateUpdateBusiness(Empty) returns (UserResponse);
    rpc GetBusiness(GetRequest) returns (UserResponse);

}


//Customer Requests
message CustomerOAuthProviderRequest {
    string provider = 1;
    string token = 2;
    string device_token = 3;
    string medium = 4;
    float latitude = 5;
    float longitude = 6;
    map<string, string> address = 7;
}
message CheckCustomerRequest {
    string type = 1;
    string user = 2;
}
message SendTokenRequest {
    optional string id = 1;
    string type = 2; // 'email' or 'phone'
    string user = 3; // email address or phone number
}
message VerifyCustomerRequest {
    string type = 1; // 'email' or 'phone'
    string user = 2; // email address or phone number
    string token = 3;
}

message CreateUpdateCustomerRequest {
    optional string id = 1;
    string email = 2;
    string password = 3;
    string phone = 4;
    string firstname = 5;
    string lastname = 6;
    map<string,string> address = 7;
    string deviceToken = 8;
    string deviceVersion = 9;
    string referral = 10;
}

message CustomerResponse {
    int32 status = 1;
    bool success = 2;
    string message = 3;
    optional string error = 4;
    message Data {
        User user = 1;
        Customer customer = 2;
        Wallet wallet = 3;
        map<string, string > settings = 4;
    }
    Data data = 5;
}
//
message Empty {}

message HealthCheckResponse {
    enum ServingStatus {
        UNKNOWN = 0;
        SERVING = 1;
        NOT_SERVING = 2;
        SERVICE_UNKNOWN = 3;  // Used only by the Watch method.
    }
    ServingStatus status = 1;
}
//Data
message User {
    string id = 1;
    string username = 2;
    string email = 3;
    string phone = 4;
    string latitude = 5;
    string longitude = 6;
    string device_version = 7;
}

message Customer {
    string id = 1;
    string firstname = 2;
    string lastname = 3;
    map<string, string> phones = 4;
    string referral_code = 5;
    string avatar = 6;
}

message Wallet {
    string id = 1;
    string accountName = 2;
    string accountNumber =3;
    double balance = 4;
}
// Response

message UserResponse {
    int32 status = 1;
    bool success = 2;
    string message = 3;
    map<string,string > data = 4;
    optional string error = 5;
}
//Requests
message UserRequest {
    string name = 1;
    string email = 2;
    string password = 3;
    string phone = 4;
}
message CreateOrUpdateRider {
    optional string id = 1;
    optional string email = 2;
    string phone = 3;
}
message GetRequest {
    string id = 1;
}

message CreateCustomer {
    string firstName = 1;
    string lastName = 2;
    string email = 3;
    string phone = 4;
    string latitude = 5;
    string longitude = 6;
    string houseNumber = 7;
    string street = 8;
    string nearestBusStop = 9;
    string city = 10;
    string state = 11;
    string country = 12;
    string deviceToken = 13;
    string deviceVersion = 14;
    string referralCode = 15;
    string password = 16;
    optional string stateId = 17;
    optional string cityId = 18;
    optional string lgaId = 19;
    map<string, string> metadata = 20;
}
message LoginRequest {
    string username = 1;
    string password = 2;
    string deviceId = 3;
    string deviceToken = 4;
}